library(devtools)
install_github("nik01010/dashboardthemes")
library(dashboardthemes)
dashboardPage(skin="yellow",
dashboardHeader(title="German credit scoring "),
dashboardSidebar(sidebarMenu()),
dashboardBody()
)
library(shiny)
library(shinydashboard)
library(shiny)
library(shinydashboard)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shinyApp(ui = ui, server = server)
runApp('C:/Users/asus/Desktop/Atelier1/appno.R')
runApp('C:/Users/asus/Desktop/Atelier1/appno.R')
runApp('C:/Users/asus/Desktop/Atelier1/appno.R')
library(shiny)
ui <- fluidPage(
headerPanel("Test"),
sidebarPanel(
#  selectInput("options", "options", choices=c('abc','def')),
textInput("textbox", "Text", ""),
actionButton("add","Add")
),
mainPanel(
textOutput("caption")
)
)
server <- function(input, output, session) {
observe({
VALUE <- ''
if(input$add>0) {
isolate({
VALUE <- input$textbox
})
}
updateTextInput(session, inputId = "textbox", value = VALUE)
})
output$caption <- renderText({
input$textbox
})
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
runApp('C:/Users/asus/Desktop/Atelier1/appno.R')
runApp('C:/Users/asus/Desktop/Atelier1/appno.R')
runApp()
runApp()
if (interactive()) {
ui <- fluidPage(
radioButtons("dist", "Distribution type:",
c("Normal" = "norm",
"Uniform" = "unif",
"Log-normal" = "lnorm",
"Exponential" = "exp")),
plotOutput("distPlot")
)
server <- function(input, output) {
output$distPlot <- renderPlot({
dist <- switch(input$dist,
norm = rnorm,
unif = runif,
lnorm = rlnorm,
exp = rexp,
rnorm)
hist(dist(500))
})
}
shinyApp(ui, server)
ui <- fluidPage(
radioButtons("rb", "Choose one:",
choiceNames = list(
icon("calendar"),
HTML("<p style='color:red;'>Red Text</p>"),
"Normal text"
),
choiceValues = list(
"icon", "html", "text"
)),
textOutput("txt")
)
server <- function(input, output) {
output$txt <- renderText({
paste("You chose", input$rb)
})
}
shinyApp(ui, server)
}
if (interactive()) {
ui <- fluidPage(
radioButtons("dist", "Distribution type:",
c("Normal" = "norm",
"Uniform" = "unif",
"Log-normal" = "lnorm",
"Exponential" = "exp")),
plotOutput("distPlot")
)
server <- function(input, output) {
output$distPlot <- renderPlot({
dist <- switch(input$dist,
norm = rnorm,
unif = runif,
lnorm = rlnorm,
exp = rexp,
rnorm)
hist(dist(500))
})
}
shinyApp(ui, server)
ui <- fluidPage(
radioButtons("rb", "Choose one:",
choiceNames = list(
icon("calendar"),
HTML("<p style='color:red;'>Red Text</p>"),
"Normal text"
),
choiceValues = list(
"icon", "html", "text"
)),
textOutput("txt")
)
server <- function(input, output) {
output$txt <- renderText({
paste("You chose", input$rb)
})
}
shinyApp(ui, server)
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
vigne <- read_excel("Matching_between_V1_V2.xls")
vigne<-data.table(vigne)
library(data.table)
library(tidyverse)
runApp('C:/Users/asus/Desktop/Atelier1/appno.R')
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/asus/Desktop/Atelier1/appno.R')
runApp('C:/Users/asus/Desktop/Atelier1/appno.R')
d=c()
d=c(d)
d=c(d,d)
d
runApp()
runApp()
runApp()
Database <- read.table("RAP-MSU_2020-03-24.txt", header =F)
colnames(Database)= c("RAPDB","MSU")
Database<-separate_rows(Database,"MSU",sep = ",")
Database$MSU=sub(".[[:digit:]]*$", "", Database$MSU)
Database<-as.data.table(Database)
rap.id <- c("Os01g0100100", "Os01g0100200")
Rap2Msu<-function(x){
data<-unique(Database[Database$RAPDB %in% x])
names(data)<-c("rap.id","msu.id")
return(data)
}
Rap2Msu(rap.id)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Msu2Rap <-function(rap.id){
data<-unique(Database[Database$MSU %in% Msu.id])
data<-data[,c(2,1)]
names(data)<-c("msu.id","rap.id")
return(data)
}
runApp()
runApp()
Database <- read.table("RAP-MSU_2020-03-24.txt", header =F)
colnames(Database)= c("RAPDB","MSU")
Database<-separate_rows(Database,"MSU",sep = ",")
Database$MSU=sub(".[[:digit:]]*$", "", Database$MSU)
Database<-as.data.table(Database)
vigne <- read_excel("Matching_between_V1_V2.xls")
vigne<-data.table(vigne)
Rap2Msu<-function(x){
data<-unique(Database[Database$RAPDB %in% x])
names(data)<-c("rap.id","msu.id")
return(data)
}
Msu2Rap <-function(rap.id){
data<-unique(Database[Database$MSU %in% Msu.id])
data<-data[,c(2,1)]
names(data)<-c("msu.id","rap.id")
return(data)
}
v1v2<-function(v1){
data<-unique(vigne[V1 %in% v1.id])
names(data)<-c("v1.id","v2.id")
return(data)
}
v2v1<-function(v2){
data<-unique(vigne[V2 %in% v2])
data<-data[,c(2,1)]
names(data)<-c("v2.id","v1.id")
return(data)
}
runApp()
as.data.frame(Msu2Rap(Msu.id) )
Msu.id <- c("LOC_Os01g01010", "LOC_Os01g01019")
as.data.frame(Msu2Rap(Msu.id) )
runApp()
runApp()
runApp()
as.data.frame(Msu2Rap(Msu.id) )
runApp()
runApp()
runApp()
Msu.id <- c("LOC_Os01g01010", "LOC_Os01g01019")
as.data.frame(Msu2Rap(Msu.id) )
runApp()
runApp()
runApp()
runApp()
Database <- read.table("RAP-MSU_2020-03-24.txt", header =F)
colnames(Database)= c("RAPDB","MSU")
Database<-separate_rows(Database,"MSU",sep = ",")
Database$MSU=sub(".[[:digit:]]*$", "", Database$MSU)
Database<-as.data.table(Database)
vigne <- read_excel("Matching_between_V1_V2.xls")
vigne<-data.table(vigne)
Rap2Msu<-function(x){
data<-unique(Database[Database$RAPDB %in% x])
names(data)<-c("rap.id","msu.id")
return(data)
}
Msu2Rap <-function(rap.id){
data<-unique(Database[Database$MSU %in% Msu.id])
data<-data[,c(2,1)]
names(data)<-c("msu.id","rap.id")
return(data)
}
v1v2<-function(v1){
data<-unique(vigne[V1 %in% v1.id])
names(data)<-c("v1.id","v2.id")
return(data)
}
v2v1<-function(v2){
data<-unique(vigne[V2 %in% v2])
data<-data[,c(2,1)]
names(data)<-c("v2.id","v1.id")
return(data)
}
Msu.id <- c("LOC_Os01g01010", "LOC_Os01g01019")
runApp()
Msu.id <- c("LOC_Os01g01010", "LOC_Os01g01019")
as.data.frame(Msu2Rap(Msu.id) )
Msu.id <- c("LOC_Os01g01010", "LOC_Os01g01019")
Msu2Rap <-function(Msu.id){
data<-unique(Database[Database$MSU %in% Msu.id])
data<-data[,c(2,1)]
names(data)<-c("msu.id","rap.id")
return(data)
}
Msu2Rap(Msu.id)
runApp()
runApp()
runApp()
runApp()
Msu.id <- c("LOC_Os01g01010", "LOC_Os01g01019")
as.data.frame(Msu2Rap(Msu.id) )
runApp()
runApp()
Msu.id <- c("LOC_Os01g01010", "LOC_Os01g01019")
m=as.data.frame(Msu2Rap(Msu.id) )
View(m)
runApp()
